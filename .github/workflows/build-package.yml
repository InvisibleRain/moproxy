name: build-package

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/tags/test-release'
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: linux_amd64.bin
            toolchain: stable

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: windows_amd64.exe
            toolchain: stable

          - release_for: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: linux_x86_64_musl.bin
            toolchain: stable

          - release_for: Linux-armv7
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            suffix: linux_armv7_gnueabihf.bin
            toolchain: stable

          - release_for: Android-aarch64
            os: ubuntu-latest
            target: aarch64-linux-android
            suffix: linux_aarch64_android.bin
            toolchain: stable

          - release_for: Linux-mips
            os: ubuntu-latest
            target: mips-unknown-linux-musl
            suffix: linux_mips_musl.bin
            toolchain: nightly

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.platform.toolchain }}
          args: --release
          strip: yes
      - name: Packaging for Debian
        if: matrix.platform.target == 'x86_64-unknown-linux-gnu'
        run: |
          cargo install deb
          cargo deb --target=${{ matrix.platform.target }} --no-build
      - name: Packaging binary
        run: |
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            xz -kf target/${{ matrix.platform.target }}/release/moproxy.exe > "moproxy_${GITHUB_REF#*/v}_${{ matrix.platform.suffix }}.xz"
          else
            xz -kfS "_${GITHUB_REF#*/v}${{ matrix.platform.suffix }}.xz" target/${{ matrix.platform.target }}/release/moproxy
          fi
      - name: Publish binary artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.platform.target }}
          path: target/${{ matrix.platform.target }}/release/*.xz
          compression-level: 0
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/${{ matrix.platform.target }}/*.xz,target/${{ matrix.platform.target }}/*.deb"
          draft: true
